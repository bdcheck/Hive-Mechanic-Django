version: 2.1

orbs:
  python: circleci/python@2.1.1
  node: circleci/node@5.0.3
  browser-tools: circleci/browser-tools@1.4.0

workflows:
  build:
    jobs:
      - build-38
      - build-27

jobs:
  build-38:
    docker:
      - image: cimg/python:3.11
      - image: cimg/postgres:9.6-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get update
            sudo apt-get install libasound2      
      - node/install
      - browser-tools/install-browser-tools
      - checkout
      - run:
          name: Install NPM dependencies
          command: |
            npm install -g -s botium-cli botium-core
            npm install
      - restore_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "requirements.txt" }}-v1
      - run:
          name: Build and validate
          command: |
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            git submodule init
            git submodule update
            pip install --upgrade pip
            pip install --upgrade wheel
            pip install -r requirements.txt
            cp hivemechanic/circle_settings.py hivemechanic/local_settings.py
            python manage.py migrate
            python manage.py loaddata fixtures/groups.json
            python manage.py initialize_permissions
            python manage.py install_default_repository
            python manage.py initialize_default_site_settings
            # python manage.py test --parallel 2
            pylint quicksilver
            pylint passive_data_kit
            pylint nagios_monitor
            pylint builder
            pylint integrations
            pylint http_support
            pylint twilio_support
            pylint user_creation
            bandit -r .
            npx eslint builder/static/builder-js/js
      - run:
          name: Test dialog content (Django Dialog Engine)
          command: |
            . /home/circleci/venv/bin/activate
            export BOTIUM_DDE_DIALOG_SCRIPT_PATH="./django_dialog_engine/botium/dialog_scripts/hello_world.json"
            export BOTIUM_DDE_DIALOG_USER_ID="circle-ci:tester-core"
            export BOTIUM_DDE_DIALOG_ID="circle-ci-test-hello-world"
            botium-cli run -c django_dialog_engine/botium/botium.json -C django_dialog_engine/botium/convos/hello_world/
            export BOTIUM_DDE_DIALOG_SCRIPT_PATH="./django_dialog_engine/botium/dialog_scripts/prompt_test.json"
            botium-cli run -c django_dialog_engine/botium/botium.json -C django_dialog_engine/botium/convos/prompt_test/
      - run:
          name: Test dialog content (Hive Mechanic)
          command: |
            . /home/circleci/venv/bin/activate
            export BOTIUM_DDE_DIALOG_SCRIPT_PATH="./builder/botium/dialog_scripts/hello_world.json"
            export BOTIUM_DDE_DIALOG_USER_ID="circle-ci:tester-hive-builder"
            export BOTIUM_DDE_DIALOG_ID="circle-ci-test-hello-world"
            botium-cli run -c django_dialog_engine/botium/botium-extension.json -C builder/botium/convos/hello_world/
            export BOTIUM_DDE_DIALOG_ID="circle-ci-test-interrupts"
            export BOTIUM_DDE_DIALOG_SCRIPT_PATH="./builder/botium/dialog_scripts/interrupt_test.json"
            botium-cli run -c django_dialog_engine/botium/botium-extension.json -C builder/botium/convos/interrupt_test/
      - save_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "/home/circleci/project/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-27:
    docker:
      - image: cimg/python:2.7
      - image: cimg/postgres:9.6-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get update
            sudo apt-get install libasound2      
      - node/install
      - browser-tools/install-browser-tools
      - checkout
      - run:
          name: Install NPM dependencies
          command: |
            nvm install 17.9.1
            nvm use 17.9.1
            npm install -g -s botium-cli botium-core
            npm install
      - restore_cache:
          key: venv-27-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            nvm use 17.9.1
            sudo apt-get update && sudo apt-get install -y gdal-bin
            virtualenv --copies /home/circleci/venv
            . /home/circleci/venv/bin/activate
            git submodule init
            git submodule update
            pip install --upgrade pip
            pip install --upgrade wheel
            pip install -r requirements.txt
            cp hivemechanic/circle_settings.py hivemechanic/local_settings.py
            python manage.py migrate
            python manage.py loaddata fixtures/groups.json
            python manage.py initialize_permissions
            python manage.py install_default_repository
            python manage.py initialize_default_site_settings
            # python manage.py test --parallel 2
            pylint quicksilver
            pylint passive_data_kit
            pylint nagios_monitor
            pylint builder
            pylint integrations
            pylint http_support
            pylint twilio_support
            pylint user_creation
            bandit -r .
            npx eslint builder/static/builder-js/js
      - run:
          name: Test dialog content (Django Dialog Engine)
          command: |
            . /home/circleci/venv/bin/activate
            export BOTIUM_DDE_DIALOG_SCRIPT_PATH="./django_dialog_engine/botium/dialog_scripts/hello_world.json"
            export BOTIUM_DDE_DIALOG_USER_ID="circle-ci:tester"
            export BOTIUM_DDE_DIALOG_ID="circle-ci-test-hello-world"
            botium-cli run -c django_dialog_engine/botium/botium.json -C django_dialog_engine/botium/convos/hello_world/
            export BOTIUM_DDE_DIALOG_SCRIPT_PATH="./django_dialog_engine/botium/dialog_scripts/prompt_test.json"
            botium-cli run -c django_dialog_engine/botium/botium.json -C django_dialog_engine/botium/convos/prompt_test/
      - run:
          name: Test dialog content (Hive Mechanic)
          command: |
            . /home/circleci/venv/bin/activate
            export BOTIUM_DDE_DIALOG_SCRIPT_PATH="./builder/botium/dialog_scripts/hello_world.json"
            export BOTIUM_DDE_DIALOG_USER_ID="circle-ci:tester-hive-builder"
            export BOTIUM_DDE_DIALOG_ID="circle-ci-test-hello-world"
            botium-cli run -c django_dialog_engine/botium/botium-extension.json -C builder/botium/convos/hello_world/
            export BOTIUM_DDE_DIALOG_ID="circle-ci-test-interrupts"
            export BOTIUM_DDE_DIALOG_SCRIPT_PATH="./builder/botium/dialog_scripts/interrupt_test.json"
            botium-cli run -c django_dialog_engine/botium/botium-extension.json -C builder/botium/convos/interrupt_test/
      - save_cache:
          key: venv-27-{{ .Branch }}-{{ checksum "/home/circleci/project/requirements.txt" }}-v1
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app
